Pattern="GAGG"
Text="TTTAGAGCCTTCAGAGG"# Input:  Strings Pattern and Text, and an integer d
d=2
# Output: The number of times Pattern appears in Text with at most d mismatches
def ApproximatePatternCount(Pattern, Text, d):
    count = 0 # initialize count variable
    n = len(Text)
    k = len(Pattern)
    p = Pattern
    for i in range(n - k + 1):
        q = Text[i:i+n]
        if HammingDistance(p,q) <= d:
            count+=1
    return count

def HammingDistance(p, q):
    count = 0
    for i in range(len(p)):
        if p[i] != q[i]:
            count = count + 1
    return count
# Insert your HammingDistance function on the following line.


### DO NOT MODIFY THE CODE BELOW THIS LINE ###
import sys
lines = sys.stdin.read().splitlines()
print(ApproximatePatternCount(lines[0],lines[1],int(lines[2])))
